    {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Parameters": {
        "InstanceType": {
          "Description": "Server instance type",
          "Type": "String",
          "Default": "t2.micro",
          "AllowedValues": [
            "t2.micro",
            "t2.small"
          ],
          "ConstraintDescription": "Must be a valid EC2 type."
        }
      },
      "KeyPair": {
        "Key": "name",
        "Value": "webserver"
     },
        "YourIp": {
            "Key": "name",
            "Value": "173.28.9.93/32"
     },
      
      "Resources": {
        "EngineeringVpc": {
          "Type": "AWS::EC2::VPC",
          "Properties": {
            "EnableDnsSupport": "true",
            "EnableDnsHostnames": "true",
            "CidrBlock": "10.0.0.0/18",
            "Tags": [
              {
                "Key": "Environment",
                "Value": "Test"
              }
            ]
          }
        },

        "InternetGateway": {
          "Type": "AWS::EC2::InternetGateway",
          "Properties": {}
        },
        "VPCGatewayAttachment": {
          "Type": "AWS::EC2::VPCGatewayAttachment",
          "Properties": {
            "InternetGatewayId": {
              "Ref": "InternetGateway"
            },
            "VpcId": {
              "Ref": "EngineeringVpc"
            }
          }
        },

        "PublicRouteTable": {
          "Type": "AWS::EC2::RouteTable",
          "Properties": {
            "VpcId": {
              "Ref": "EngineeringVpc"
            }
          }
        },      

        "PublicRoute": {
          "Type": "AWS::EC2::Route",
          "Properties": {
            "DestinationCidrBlock": "0.0.0.0/0",
            "RouteTableId": {
              "Ref": "PublicRouteTable"
            },
            "GatewayId": {
              "Ref": "InternetGateway"
            }
          },
          "DependsOn": [
            "InternetGateway"
          ]
        },

        "PublicSubnet1": {
          "Type": "AWS::EC2::Subnet",
          "Properties": {
            "VpcId": {
                "Ref": "EngineeringVpc"
            },
            "MapPublicIpOnLaunch" : "true",
            "CidrBlock": "10.0.0.0/24",
            "AvailabilityZone" : {
              "Fn::Select" : [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" }}]
            },
            "Tags" : [
              { "Key": "Name",
                "Value": "Website-Public-Subnet"
              }
            ]
          }
        },

        "PublicSubnet1RTassoc": {
          "Type": "AWS::EC2::SubnetRouteTableAssociation",
          "Properties": {
            "RouteTableId": {
              "Ref": "PublicRouteTable"
            },
            "SubnetId": {
              "Ref": "PublicSubnet1"
            }
          }
        },


        "PublicSubnet2": {
          "Type": "AWS::EC2::Subnet",
          "Properties": {
            "VpcId": {
                "Ref": "EngineeringVpc"
            },
            "MapPublicIpOnLaunch" : "true",
            "CidrBlock": "10.0.1.0/24",
            "AvailabilityZone" : {
              "Fn::Select" : [ "1", { "Fn::GetAZs" : { "Ref" : "AWS::Region" }}]
            },
            "Tags" : [
              { "Key": "Name",
                "Value": "Website-Public-Subnet"
              }
            ]
          }
        }, 



        "PublicSubnet2RTassoc": {
          "Type": "AWS::EC2::SubnetRouteTableAssociation",
          "Properties": {
            "RouteTableId": {
              "Ref": "PublicRouteTable"
            },
            "SubnetId": {
              "Ref": "PublicSubnet2"
            }
          }
        },



        "Web1": {
          "Type": "AWS::EC2::Instance",
          "Properties" : {
            "InstanceType": {"Ref": "InstanceType"},
            "ImageId": "ami-3ea13f29",
            "SubnetId": { "Ref": "PublicSubnet1" },
            "SecurityGroupIds": [
              { "Ref": "WebserverSG"}
            ],
            "Tags" : [
              { "Key": "Name",
                "Value": "webserver1"
              }
            ]
          }
        },


        "Web2": {
          "Type": "AWS::EC2::Instance",
          "Properties" : {
            "InstanceType": {"Ref": "InstanceType"},
            "ImageId": "ami-3ea13f29",
            "SubnetId": { "Ref": "PublicSubnet2" },
            "SecurityGroupIds": [
              { "Ref": "WebserverSG"}
            ],
            "Tags" : [
              { "Key": "Name",
                "Value": "webserver2"
              }
            ]
          }
        },


        "WebserverSG": {
          "Type": "AWS::EC2::SecurityGroup",
          "Properties": {
            "VpcId": {
                "Ref": "EngineeringVpc"
        },
        "GroupDescription": "Security group rules for webserver host",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
                 "Ref":"YourIp"
            }
          }
        ]
      }
    },
    "EngineeringLB": { 
      "Type": "AWS::ElasticLoadBalancingv2:: LoadBalancer", 
      "Properties": { 
        "Name": "EngineeringLB", 
        "SecurityGroups": [ 
            { 
                "Ref": "WebserverSG"
             
            }

        ],
        "Subnets": [ 
            {
                "Ref": "publicSubnet1" 
            },
            {
                "Ref": "publicSubnet2"
            }
        ],     
        "Tags": [
            {     
                "Key": "Name", 
                "Value": "EngineerLB" 
            } 
            
          ],
          "Type": "application"

      } 
           
    }, 
    "EngineeringWebservers": { 
      "Type": "AWS::ElasticLoadBalancingv2:: TargetGroup", 
      "Condition": "CreateTwoServer", 
      "Properties": { 
        "Port" : "80", 
        "Protocol": "HTTP", 
        "HealthCheckIntervalSeconds": 60, 
        "Unhealthy ThresholdCount": 10, 
        "HealthCheckPath": "/url", 
        "TargetType": "instance", 
        "VpcÄ«d": { 
          "Ref": "EngineeringVpc"
        },   
        "Targets": [ 
            {
                 "Id": { 
                     "Ref": "web1" 
                  },
                  "Port": "80"
            },
            {    
                  "Id" : { 
                       "Ref": "web2" 
                  }, 
                  "Port": "80" 
                  
            }
        ]
      }
    }
  },       
  "Outputs": {
    "weburl": {
      "Value": { 
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "Webserver",
                "PublicIp"
              ]
            }
          ]
        ]
      },
      "Description": "Webserver URL"
    }
  }
}